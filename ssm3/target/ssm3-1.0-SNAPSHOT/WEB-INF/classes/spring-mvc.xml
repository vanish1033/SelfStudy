<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--    <bean id="/hello.do" class="com.bjpowernode.com.bjpowernode.controller.HelloController"/>-->


    <!--
    配置视图解析器，
    帮助ModelAndView定位前端jsp文件
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--        前缀-->
        <property name="prefix" value="/WEB-INF/view/"/>
        <!--        后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>


    <!-- 配置注解扫描器 -->
    <context:component-scan base-package="com.bjpowernode.controller"/>


    <!--
    解决spring-mvc中央调度器的url-pattern配置为 / 后，静态资源无法访问的问题
    下面配置的是：从/html/**来的请求，到/html/目录下找对应请求的资源
    -->
    <mvc:resources mapping="/js/**" location="/js/"/>

    <!--
    配置注解驱动

    注解驱动作用是：创建HttpMessageConverter的7个实现类，其中包含有：
    StringHttpMessageConverter, MappingJackson2HttpMessageConverter

    StringHttpMessageConverter:把处理器方法的返回String类型的值转为 text 文本处理
    MappingJackson2HttpMessageConverter：把处理器方法的返回对象（Student,List,Integer等等）类型转为json
    -->
    <mvc:annotation-driven/>


    <!--    &lt;!&ndash;声明拦截器&ndash;&gt;-->
    <!--    <mvc:interceptors>-->
    <!--        &lt;!&ndash;拦截器可以多有多个，声明第一个拦截器&ndash;&gt;-->
    <!--        <mvc:interceptor>-->
    <!--            &lt;!&ndash;指定拦截的请求url地址， path是就是地址， 可以通配符 "**"&ndash;&gt;-->
    <!--            <mvc:mapping path="/**"/>-->
    <!--            &lt;!&ndash;class:拦截器对象的全限定类名&ndash;&gt;-->
    <!--            <bean class="com.bjpowernode.Interceptor.MyInterceptor1"/>-->
    <!--        </mvc:interceptor>-->
    <!--        <mvc:interceptor>-->
    <!--            &lt;!&ndash;指定拦截的请求url地址， path是就是地址， 可以通配符 "**"&ndash;&gt;-->
    <!--            <mvc:mapping path="/**"/>-->
    <!--            &lt;!&ndash;class:拦截器对象的全限定类名&ndash;&gt;-->
    <!--            <bean class="com.bjpowernode.Interceptor.MyInterceptor2"/>-->
    <!--        </mvc:interceptor>-->
    <!--    </mvc:interceptors>-->
</beans>